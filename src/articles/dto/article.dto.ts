import {
  IsString,
  IsOptional,
  IsInt,
  IsBoolean,
  IsArray,
  MinLength,
  IsDateString,
  IsEnum,
} from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { Type, Transform } from 'class-transformer';
import { AIProvider } from '../../common/enums/ai-provider.enum';
import { PaginationDto } from '../../common/dto/pagination.dto';

export class CreateArticleDto {
  @ApiProperty({
    description: 'Article title',
    example: 'Getting Started with NestJS',
  })
  @IsString()
  @MinLength(3)
  title: string;

  @ApiProperty({
    description: 'Article content',
    example: 'This is a comprehensive guide to NestJS...',
  })
  @IsString()
  @MinLength(10)
  content: string;

  @ApiPropertyOptional({
    description: 'Article excerpt',
    example: 'A brief introduction to NestJS framework',
  })
  @IsOptional()
  @IsString()
  excerpt?: string;

  @ApiPropertyOptional({
    description: 'Featured image URL',
    example: 'https://example.com/image.jpg',
  })
  @IsOptional()
  @IsString()
  featured_image?: string;

  @ApiProperty({
    description: 'Category ID',
    example: 1,
  })
  @Type(() => Number)
  @IsInt()
  category_id: number;

  @ApiPropertyOptional({
    description: 'Array of tag IDs',
    example: [1, 2, 3],
  })
  @IsOptional()
  @IsArray()
  @Type(() => Number)
  @IsInt({ each: true })
  tagIds?: number[];

  @ApiPropertyOptional({
    description: 'Whether to publish immediately',
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  is_published?: boolean;

  @ApiPropertyOptional({
    description: 'Schedule publication for future date (ISO string)',
    example: '2024-12-31T10:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  scheduled_for?: string;

  @ApiPropertyOptional({
    description: 'Whether this article was generated by AI',
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  is_ai?: boolean;

  @ApiPropertyOptional({
    description: 'AI prompt used to generate this article',
    example: 'Write an article about NestJS fundamentals',
  })
  @IsOptional()
  @IsString()
  aiPrompt?: string;

  @ApiPropertyOptional({
    description: 'Language code for the article (ISO 639-1)',
    example: 'en',
  })
  @IsOptional()
  @IsString()
  language_code?: string;

  @ApiPropertyOptional({
    description: 'Country code for the article (ISO 3166-1 alpha-2)',
    example: 'US',
  })
  @IsOptional()
  @IsString()
  country_code?: string;
}

export class UpdateArticleDto {
  @ApiPropertyOptional({
    description: 'Article title',
    example: 'Updated: Getting Started with NestJS',
  })
  @IsOptional()
  @IsString()
  @MinLength(3)
  title?: string;

  @ApiPropertyOptional({
    description: 'Article content',
    example: 'Updated content for the NestJS guide...',
  })
  @IsOptional()
  @IsString()
  @MinLength(10)
  content?: string;

  @ApiPropertyOptional({
    description: 'Article excerpt',
    example: 'Updated brief introduction to NestJS framework',
  })
  @IsOptional()
  @IsString()
  excerpt?: string;

  @ApiPropertyOptional({
    description: 'Featured image URL',
    example: 'https://example.com/updated-image.jpg',
  })
  @IsOptional()
  @IsString()
  featured_image?: string;

  @ApiPropertyOptional({
    description: 'Category ID',
    example: 2,
  })
  @IsOptional()
  @Type(() => Number)
  @IsInt()
  category_id?: number;

  @ApiPropertyOptional({
    description: 'Array of tag IDs',
    example: [1, 3, 4],
  })
  @IsOptional()
  @IsArray()
  @Type(() => Number)
  @IsInt({ each: true })
  tagIds?: number[];

  @ApiPropertyOptional({
    description: 'Whether the article is published',
    example: true,
  })
  @IsOptional()
  @IsBoolean()
  is_published?: boolean;

  @ApiPropertyOptional({
    description: 'Schedule publication for future date (ISO string)',
    example: '2024-12-31T10:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  scheduled_for?: string;

  @ApiPropertyOptional({
    description: 'Language code for the article (ISO 639-1)',
    example: 'en',
  })
  @IsOptional()
  @IsString()
  language_code?: string;

  @ApiPropertyOptional({
    description: 'Country code for the article (ISO 3166-1 alpha-2)',
    example: 'US',
  })
  @IsOptional()
  @IsString()
  country_code?: string;
}

export class CreateCategoryDto {
  @ApiProperty({
    description: 'Category name',
    example: 'Web Development',
  })
  @IsString()
  @MinLength(2)
  name: string;

  @ApiPropertyOptional({
    description: 'Category description',
    example: 'Articles about web development technologies',
  })
  @IsOptional()
  @IsString()
  description?: string;
}

export class CreateTagDto {
  @ApiProperty({
    description: 'Tag name',
    example: 'JavaScript',
  })
  @IsString()
  @MinLength(2)
  name: string;
}

export class ArticleFilterDto extends PaginationDto {
  @ApiPropertyOptional({
    description: 'Filter by category ID',
    example: 1,
  })
  @IsOptional()
  @Type(() => Number)
  @IsInt()
  category_id?: number;

  @ApiPropertyOptional({
    description: 'Filter by category ID (camelCase alternative)',
    example: 1,
  })
  @IsOptional()
  @Type(() => Number)
  @IsInt()
  categoryId?: number;

  @ApiPropertyOptional({
    description: 'Filter by tag ID',
    example: 1,
  })
  @IsOptional()
  @Type(() => Number)
  @IsInt()
  tag_id?: number;

  @ApiPropertyOptional({
    description: 'Filter by tag ID (camelCase alternative)',
    example: 1,
  })
  @IsOptional()
  @Type(() => Number)
  @IsInt()
  tagId?: number;

  @ApiPropertyOptional({
    description: 'Search in title and content',
    example: 'nestjs',
  })
  @IsOptional()
  @IsString()
  search?: string;

  @ApiPropertyOptional({
    description: 'Filter by published status',
    example: true,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  is_published?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by AI-generated content',
    example: false,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  is_ai?: boolean;

  @ApiPropertyOptional({
    description:
      'Filter by scheduled status: "scheduled", "published", "draft"',
    example: 'published',
  })
  @IsOptional()
  @IsString()
  status?: 'scheduled' | 'published' | 'draft';

  @ApiPropertyOptional({
    description: 'Filter featured articles only',
    example: true,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  featured?: boolean;

  @ApiPropertyOptional({
    description: 'Show articles from this week only',
    example: true,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  thisWeek?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by language code (ISO 639-1)',
    example: 'en',
  })
  @IsOptional()
  @IsString()
  language_code?: string;

  @ApiPropertyOptional({
    description: 'Filter by country code (ISO 3166-1 alpha-2)',
    example: 'US',
  })
  @IsOptional()
  @IsString()
  country_code?: string;
}

export class AIGenerateArticleDto {
  @ApiProperty({
    description: 'Prompt for AI to generate article content',
    example:
      'Write an article about modern JavaScript features and best practices',
  })
  @IsString()
  @MinLength(10)
  prompt: string;

  @ApiPropertyOptional({
    description: 'AI provider to use for generation',
    enum: AIProvider,
    example: AIProvider.OPENAI,
  })
  @IsOptional()
  @IsEnum(AIProvider)
  provider?: AIProvider;

  @ApiPropertyOptional({
    description: 'Specific topic or focus area',
    example: 'ES2024 features',
  })
  @IsOptional()
  @IsString()
  topic?: string;

  @ApiProperty({
    description: 'Category ID for the generated article',
    example: 1,
  })
  @Type(() => Number)
  @IsInt()
  category_id: number;

  @ApiPropertyOptional({
    description: 'Array of tag IDs to assign',
    example: [1, 2, 3],
  })
  @IsOptional()
  @IsArray()
  @Type(() => Number)
  @IsInt({ each: true })
  tagIds?: number[];

  @ApiPropertyOptional({
    description: 'Whether to publish immediately or save as draft',
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  publishNow?: boolean;

  @ApiPropertyOptional({
    description: 'Schedule publication for future date (ISO string)',
    example: '2024-12-31T10:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  scheduled_for?: string;
}
