import {
  IsString,
  IsOptional,
  IsArray,
  IsEnum,
  MinLength,
  IsBoolean,
  IsUrl,
  IsDateString,
  IsInt,
} from 'class-validator';
import { ApiProperty, PartialType, ApiPropertyOptional } from '@nestjs/swagger';
import { PostType } from '@prisma/client';
import { AIProvider } from '../../common/enums/ai-provider.enum';
import { Type, Transform } from 'class-transformer';
import { PaginationDto } from '../../common/dto/pagination.dto';

export class CreatePostDto {
  @ApiProperty({
    description: 'Post content in markdown or plain text',
    example:
      'Just discovered this amazing new JavaScript framework! Check it out: https://example.com',
  })
  @IsString()
  @MinLength(1)
  content: string;

  @ApiProperty({
    description: 'Post type',
    enum: PostType,
    example: PostType.TEXT,
    required: false,
  })
  @IsOptional()
  @IsEnum(PostType)
  type?: PostType;

  @ApiProperty({
    description: 'Media URL for image/video posts',
    example: 'https://example.com/image.jpg',
    required: false,
  })
  @IsOptional()
  @IsUrl()
  mediaUrl?: string;

  @ApiProperty({
    description: 'Link URL for link posts',
    example: 'https://example.com/article',
    required: false,
  })
  @IsOptional()
  @IsUrl()
  linkUrl?: string;

  @ApiProperty({
    description: 'Whether the post is public',
    example: true,
    required: false,
  })
  @IsOptional()
  @IsBoolean()
  isPublic?: boolean;

  @ApiProperty({
    description: 'Whether to publish immediately',
    example: true,
    required: false,
  })
  @IsOptional()
  @IsBoolean()
  isPublished?: boolean;

  @ApiProperty({
    description: 'Schedule publication for future date (ISO string)',
    example: '2024-12-31T10:00:00Z',
    required: false,
  })
  @IsOptional()
  @IsDateString()
  scheduledFor?: string;

  @ApiProperty({
    description: 'Whether this post was generated by AI',
    example: false,
    required: false,
  })
  @IsOptional()
  @IsBoolean()
  isAI?: boolean;

  @ApiProperty({
    description: 'AI prompt used to generate this post',
    example: 'Create a post about the latest JavaScript features',
    required: false,
  })
  @IsOptional()
  @IsString()
  aiPrompt?: string;

  @ApiProperty({
    description: 'Array of cafe IDs this post belongs to',
    example: [1, 2],
    required: false,
    type: [Number],
  })
  @IsOptional()
  @IsArray()
  cafes?: number[];

  @ApiProperty({
    description: 'Array of tag IDs for this post',
    example: [1, 2, 3],
    required: false,
    type: [Number],
  })
  @IsOptional()
  @IsArray()
  tags?: number[];

  @ApiPropertyOptional({
    description: 'Language code for the post (ISO 639-1)',
    example: 'en',
  })
  @IsOptional()
  @IsString()
  languageCode?: string;

  @ApiPropertyOptional({
    description: 'Country code for the post (ISO 3166-1 alpha-2)',
    example: 'US',
  })
  @IsOptional()
  @IsString()
  countryCode?: string;
}

export class UpdatePostDto extends PartialType(CreatePostDto) {}

export class PostFilterDto extends PaginationDto {
  @ApiPropertyOptional({
    description: 'Filter by cafe ID',
    required: false,
    type: Number,
  })
  @IsOptional()
  cafeId?: number;

  @ApiPropertyOptional({
    description: 'Filter by tag ID',
    required: false,
    type: Number,
  })
  @IsOptional()
  tagId?: number;

  @ApiPropertyOptional({
    description: 'Filter by post type',
    enum: PostType,
    required: false,
  })
  @IsOptional()
  @IsEnum(PostType)
  type?: PostType;

  @ApiPropertyOptional({
    description: 'Filter by public/private posts',
    required: false,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  isPublic?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by published status',
    required: false,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  isPublished?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by AI-generated content',
    required: false,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  isAI?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by status: "scheduled", "published", "draft"',
    required: false,
  })
  @IsOptional()
  @IsString()
  status?: 'scheduled' | 'published' | 'draft';

  @ApiPropertyOptional({
    description: 'Filter by author ID',
    required: false,
    type: Number,
  })
  @IsOptional()
  authorId?: number;

  @ApiPropertyOptional({
    description: 'Show trending posts only',
    example: true,
  })
  @IsOptional()
  @Transform(({ value }) => value === 'true' || value === true)
  @IsBoolean()
  trending?: boolean;

  @ApiPropertyOptional({
    description: 'Filter by language code (ISO 639-1)',
    example: 'en',
  })
  @IsOptional()
  @IsString()
  languageCode?: string;

  @ApiPropertyOptional({
    description: 'Filter by country code (ISO 3166-1 alpha-2)',
    example: 'US',
  })
  @IsOptional()
  @IsString()
  countryCode?: string;
}

export class AIGeneratePostDto {
  @ApiProperty({
    description: 'Prompt for AI to generate post content',
    example: 'Create an engaging post about React hooks and their benefits',
  })
  @IsString()
  @MinLength(10)
  prompt: string;

  @ApiProperty({
    description: 'AI provider to use for generation',
    enum: AIProvider,
    example: AIProvider.OPENAI,
    required: false,
  })
  @IsOptional()
  @IsEnum(AIProvider)
  provider?: AIProvider;

  @ApiProperty({
    description: 'Mood or tone for the post',
    example: 'enthusiastic',
    required: false,
  })
  @IsOptional()
  @IsString()
  mood?: string;

  @ApiProperty({
    description: 'Post type for the generated content',
    enum: PostType,
    example: PostType.TEXT,
    required: false,
  })
  @IsOptional()
  @IsEnum(PostType)
  type?: PostType;

  @ApiProperty({
    description: 'Whether to publish immediately or save as draft',
    example: false,
    required: false,
  })
  @IsOptional()
  @IsBoolean()
  publishNow?: boolean;

  @ApiProperty({
    description: 'Schedule publication for future date (ISO string)',
    example: '2024-12-31T10:00:00Z',
    required: false,
  })
  @IsOptional()
  @IsDateString()
  scheduledFor?: string;

  @ApiProperty({
    description: 'Whether the post should be public',
    example: true,
    required: false,
  })
  @IsOptional()
  @IsBoolean()
  isPublic?: boolean;
}
